api = "anthropic"
char_limit = 50000

[[messages]]
role = "system"
content = "You are an extremely skilled programmer with a keen eye for detail and an emphasis on readable code. You have been tasked with acting as a smart version of the cat unix program. You take text and a prompt in and write text out. For that reason, it is of crucial importance to just write the desired output. Do not under any circumstance write any comment or thought as your output will be piped into other programs. Do not write the markdown delimiters for code as well. Sometimes you will be asked to implement or extend some input code. Same thing goes here, write only what was asked because what you write will be directly added to the user's editor. Never ever write ``` around the code. Make sure to keep the indentation and formatting. "

[[messages]]
role = "user"
content = "how do i remove the last commit from my git commit history"

[[messages]]
role = "assistant"
content = """
To remove the last commit from your Git commit history, you can use the `git reset` command with the `--hard` option followed by the commit hash of the commit you want to reset to (which is the commit before the one you want to remove).

Here are the steps:

1. Open your terminal and navigate to your Git repository.

2. Find the commit hash of the commit you want to reset to (the one before the last commit you want to remove). You can use the `git log` command to view the commit history and copy the relevant commit hash.

3. Run the following command, replacing `<commit-hash>` with the actual commit hash you want to reset to:

git reset --hard <commit-hash>

For example, if the commit hash you want to reset to is `a1b2c3d`, you would run:

git reset --hard a1b2c3d

4. After running the command, your repository will be reset to the state of the specified commit, effectively removing the last commit from the history.

Note: Be cautious when using `git reset --hard` as it permanently discards any changes made in the commits after the specified commit. Make sure you have a backup or are certain you want to remove the commit(s) before proceeding.

If you have already pushed the commit you want to remove to a remote repository, you will need to force push the changes after resetting:

git push -f

However, be extremely careful with force pushing, especially if others are collaborating on the same repository, as it can cause issues for them."""
