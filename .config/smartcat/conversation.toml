api = "anthropic"
char_limit = 50000

[[messages]]
role = "system"
content = "You are an extremely skilled programmer with a keen eye for detail and an emphasis on readable code. You have been tasked with acting as a smart version of the cat unix program. You take text and a prompt in and write text out. For that reason, it is of crucial importance to just write the desired output. Do not under any circumstance write any comment or thought as your output will be piped into other programs. Do not write the markdown delimiters for code as well. Sometimes you will be asked to implement or extend some input code. Same thing goes here, write only what was asked because what you write will be directly added to the user's editor. Never ever write ``` around the code. Make sure to keep the indentation and formatting. "

[[messages]]
role = "user"
content = '''
generate a one-line commit message for these changesdiff --git a/dafny_testing/setup.sh b/dafny_testing/setup.sh
index c267bc8..687572a 100755
--- a/dafny_testing/setup.sh
+++ b/dafny_testing/setup.sh
@@ -2,6 +2,7 @@
 
 export SSAPPER_CACHE_FILE=./cache
 export SSAPPER_PERF_FILE=./perf
+export SSAPPER_SOLVER_PATH=/tmp/z3-4.13.3-x64-glibc-2.35/bin/z3
 
 alias ssapper="cargo run --bin=ssapper --"
 alias perfs="cargo run --bin=ssapper-tool -- stats --summary $SSAPPER_PERF_FILE"
diff --git a/dafny_testing/verify b/dafny_testing/verify
index 9747271..abe3bbe 100755
--- a/dafny_testing/verify
+++ b/dafny_testing/verify
@@ -30,33 +30,33 @@ echo "Verifying all definition files"
 dafny types.dfy agents.dfy network.dfy synod.dfy
 
 
-# # Proof Files
-# echo ""
-# echo "Verifying proof_validity.dfy"
-# dafny proof_validity.dfy
-
-# echo ""
-# echo "Verifying proof_agreement_invariants.dfy"
-# dafny proof_agreement_invariants.dfy
-
-# echo ""
-# echo "Verifying proof_axioms.dfy"
-# dafny proof_axioms.dfy
-
-# echo ""
-# echo "Verifying proof_helper.dfy"
-# dafny proof_helper.dfy
-
-# echo ""
-# echo "Verifying proof_agreement_chosenProperties1.dfy"
-# dafny proof_agreement_chosenProperties1.dfy
-
-# echo ""
-# echo "Verifying proof_agreement_chosenProperties2.dfy"
-# dafny proof_agreement_chosenProperties2.dfy
-
-# echo ""
-# echo "Verifying proof_agreement.dfy"
-# dafny proof_agreement.dfy
+# Proof Files
+echo ""
+echo "Verifying proof_validity.dfy"
+dafny proof_validity.dfy
+
+echo ""
+echo "Verifying proof_agreement_invariants.dfy"
+dafny proof_agreement_invariants.dfy
+
+echo ""
+echo "Verifying proof_axioms.dfy"
+dafny proof_axioms.dfy
+
+echo ""
+echo "Verifying proof_helper.dfy"
+dafny proof_helper.dfy
+
+echo ""
+echo "Verifying proof_agreement_chosenProperties1.dfy"
+dafny proof_agreement_chosenProperties1.dfy
+
+echo ""
+echo "Verifying proof_agreement_chosenProperties2.dfy"
+dafny proof_agreement_chosenProperties2.dfy
+
+echo ""
+echo "Verifying proof_agreement.dfy"
+dafny proof_agreement.dfy
 
 echo "Done"
diff --git a/lib/ssapper.rs b/lib/ssapper.rs
index 0a89e59..a6b425b 100644
--- a/lib/ssapper.rs
+++ b/lib/ssapper.rs
@@ -392,6 +392,7 @@ fn next_sexp(
                 parser.running = parser.running[..ind].to_string();
                 break;
             }
+
             if parser.line_has_stuff && parser.par_balance == 0 {
                 parser.line_has_stuff = false;
                 let cur = &parser.running[..=ind];
diff --git a/src/main.rs b/src/main.rs
index 38d6e18..0b07fb3 100644
--- a/src/main.rs
+++ b/src/main.rs
@@ -1,7 +1,7 @@
 use std::{
     env,
-    fs::{File, OpenOptions},
-    io::{stdin, BufRead, BufReader, Write},
+    fs::File,
+    io::{stdin, BufRead, BufReader},
     process::Command,
 };
 
@@ -32,14 +32,11 @@ fn main() -> anyhow::Result<()> {
     let cli = Cli::parse();
     let mut opts = cli.opts;
 
-    let z3_path: String = match env::var("SSAPPER_SOLVER_PATH") {
+    // let z3_path: String =
+    //     env::var("SSAPPER_SOLVER_PATH").unwrap_or(which("z3")?.to_str().unwrap().to_string());
+    let z3_path = match env::var("SSAPPER_SOLVER_PATH") {
         Ok(path) => path,
-        _ => {
-            let p = which("z3")?;
-            p.to_str()
-                .ok_or(anyhow!("couldnt construct z3 path"))?
-                .to_string()
-        }
+        Err(_) => which("z3")?.to_str().unwrap().to_string(),
     };
 
     Z3_CHECKSUM.set(digest(&z3_path)).map_err(|e| anyhow!(e))?;
diff --git a/test.sh b/test.sh
index e10dec3..689626b 100755
--- a/test.sh
+++ b/test.sh
@@ -1,20 +1,6 @@
-#!/usr/bin/env sh
+#!/bin/sh
 
-export SSAPPER_CACHE_FILE=/tmp/bla
+set -x
 
-cargo build --release || exit $?
-rm out/*
-
-# ./target/debug/ssapper -s z3\ -in -- -i ./testing_inputs/handmade/in1 -o out/out1
-# ./target/debug/ssapper -s z3\ -in -- -i ./testing_inputs/handmade/in2 -o out/out2
-# ./target/debug/ssapper -s z3\ -in -- -i ./testing_inputs/handmade/in3 -o out/out3
-# ./target/debug/ssapper -s z3\ -in -- -i ./testing_inputs/handmade/in3 -o out/out4
-
-# stainless 635 min error diff
-find testing_inputs/stainless_benchmarks/ -type f | parallel ./test_single.sh 
-# find testing_inputs/stainless_benchmarks/ -exec ./test_single.sh {} \;
-
-# for f in $(find ./testing_inputs/QF_NIA/ -type f -name "*.smt2");
-# do
-#     ./target/debug/ssapper -s z3\ -in z3\ -in z3\ -in -- -i "$f" -o out/$(basename "$f")
-# done
+dafny verify --disable-nonlinear-arithmetic --verification-time-limit 20 daisy-nfsd/src/util/marshal.i.dfy
+dafny verify --solver-path /usr/bin/z3 --disable-nonlinear-arithmetic --verification-time-limit 20 daisy-nfsd/src/util/marshal.i.dfy
'''

[[messages]]
role = "assistant"
content = "Uncomment dafny verification lines in bash script"

[[messages]]
role = "user"
content = "prioritize the rs files for the message"

[[messages]]
role = "assistant"
content = "Update z3 path handling and uncomment verification lines"
